{
    "openapi": "3.0.0",
    "info": {
        "title": "Library Api Documentation",
        "description": "This API documentation for the Library app will help you streamline communication across teams. Using this documentation, developers can quickly understand the available API endpoints, parameters, and responses, allowing for faster integration and troubleshooting. The Swagger UI provides an interactive interface where you can test the endpoints in real time.\n *\n *   **Example:**\n *\n *   1. To get a list of books, use the `GET /books` endpoint.\n *   2. To create a new books record, use the `POST /books` endpoint with the required fields like `name`, `author`, `release_year`,etc....\n *\n *   **How to use Swagger UI:**\n *\n *   1. Navigate to the specific API endpoint you're interested in.\n *   2. Fill in the required parameters (e.g., books ID for a GET request).\n *   3. Click the `Try it out` button to test the endpoint.\n *   4. Review the response in real-time to see if the data or status code is as expected.\n *\n *   Swagger UI makes API testing easy and helps you understand the structure and usage of our API endpoints.",
        "contact": {
            "email": "msn.dev@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "3.1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "Localhost"
        }
    ],
    "paths": {
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "description": "Returns list of users",
                "operationId": "7208c29037df2b8bb02499ba39ed8a78",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "573de1fed352c1205a32c4d1b9877375",
                "requestBody": {
                    "description": "User registration data.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "phone",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "format": "phone",
                                        "example": "091234567890"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User has been registered successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "statusCode": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "token": {
                "type": "http",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Users",
            "description": "Users"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        }
    ]
}